# Recursos p√∫blicos e privados

# Modificadores de acesso
# P√∫blico: Pode ser acessado de fora da classe
# Privado: S√≥ pode ser acessado pela classe

'''
üè∑Ô∏è N√≠veis de Acesso no Python
Python n√£o tem modificadores de acesso como private, protected e public expl√≠citos (como Java ou C++), mas utiliza conven√ß√µes:

Modificador	Exemplo	Acess√≠vel de fora da classe?
Uso t√≠pico
P√∫blico	self.atributo	‚úÖ Sim	Pode ser acessado diretamente

Protegido (_)	self._atributo	‚ö†Ô∏è Sim (mas n√£o recomendado)	Indica que √© "privado", mas pode ser acessado se necess√°rio

Privado (__)	self.__atributo	‚ùå N√£o (mas pode ser acessado com "name mangling")	

'''

class Conta:
    def __init__(self, nro_agencia, saldo=0):
        self._saldo = saldo # Privado
        self.nro_agencia = nro_agencia # P√∫blico
    
    def depositar(self, valor):
        self._saldo += valor

    def sacar(self, valor):
        self._saldo -= valor

    def mostrar_saldo(self):
        return self._saldo
    

conta = Conta("0001", 100)
conta.depositar(100)
# print(conta._saldo) -> Por ser privado, n√£o devemos modificar fora da classe
print(conta)
print(conta.mostrar_saldo())